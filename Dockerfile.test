# KATO Test Harness Container
# A dedicated container for running all KATO tests with proper dependencies

FROM python:3.9-slim

# Install system dependencies including Docker client
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        gcc \
        g++ \
        make \
        curl \
        git \
        ca-certificates \
        gnupg \
        lsb-release \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg \
    && echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
        $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get update \
    && apt-get install -y docker-ce-cli \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /kato

# Copy requirements first for better caching
COPY requirements.txt requirements-test.txt* ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Install test-specific dependencies
RUN pip install --no-cache-dir \
    pytest==8.4.1 \
    pytest-asyncio==0.21.1 \
    pytest-timeout==2.2.0 \
    pytest-xdist==3.5.0 \
    pytest-cov==4.1.0 \
    pytest-mock==3.12.0 \
    numpy==1.24.3 \
    scipy==1.10.1 \
    rapidfuzz==3.6.1 \
    pyyaml==6.0.1

# Copy the KATO source code
COPY kato/ ./kato/
COPY scripts/ ./scripts/
COPY setup.py ./
COPY README.md ./
# Copy tests to /tests directory (not /kato/tests)
COPY tests/ /tests/
# pytest.ini is already in tests directory

# Install KATO in development mode
RUN pip install -e .

# Create a test runner script
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Default to running all tests\n\
TEST_PATH="${1:-tests/}"\n\
EXTRA_ARGS="${@:2}"\n\
\n\
# Set optimization flags if not already set\n\
export KATO_USE_FAST_MATCHING="${KATO_USE_FAST_MATCHING:-true}"\n\
export KATO_USE_INDEXING="${KATO_USE_INDEXING:-true}"\n\
export LOG_LEVEL="${LOG_LEVEL:-INFO}"\n\
\n\
# Set test environment variables\n\
export MONGO_BASE_URL="${MONGO_BASE_URL:-mongodb://mongo-kb:27017}"\n\
export PYTHONPATH="/kato:/tests:$PYTHONPATH"\n\
\n\
echo "================================"\n\
echo "KATO Test Harness"\n\
echo "================================"\n\
echo "Test Path: $TEST_PATH"\n\
echo "Optimization Flags:"\n\
echo "  KATO_USE_FAST_MATCHING=$KATO_USE_FAST_MATCHING"\n\
echo "  KATO_USE_INDEXING=$KATO_USE_INDEXING"\n\
echo "================================"\n\
echo ""\n\
\n\
# Run pytest with coverage and nice output\n\
# Use -p no:cacheprovider to disable cache and avoid warnings\n\
if [ -n "$EXTRA_ARGS" ]; then\n\
    cd /tests && python -m pytest "$TEST_PATH" \\\n\
        -v \\\n\
        --tb=short \\\n\
        --color=yes \\\n\
        --durations=10 \\\n\
        -p no:cacheprovider \\\n\
        $EXTRA_ARGS\n\
else\n\
    cd /tests && python -m pytest "$TEST_PATH" \\\n\
        -v \\\n\
        --tb=short \\\n\
        --color=yes \\\n\
        --durations=10 \\\n\
        -p no:cacheprovider\n\
fi\n\
' > /usr/local/bin/run-tests && chmod +x /usr/local/bin/run-tests

# Change to tests directory for test execution
WORKDIR /tests

# Set default command
CMD ["run-tests"]