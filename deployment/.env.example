# KATO Configuration Example
# Copy this file to .env and customize as needed
# The docker-compose.yml will automatically load values from .env

# ============================================================================
# Service Configuration
# ============================================================================

# Service name (for logging and identification)
SERVICE_NAME=kato

# ============================================================================
# Database Connection Settings
# ============================================================================

# MongoDB connection URL
# Default connects to the mongodb container
MONGO_BASE_URL=mongodb://mongodb:27017

# Qdrant vector database settings
# Default connects to the qdrant container
QDRANT_HOST=qdrant
QDRANT_PORT=6333

# Redis connection URL
# Default connects to the redis container
REDIS_URL=redis://redis:6379

# ============================================================================
# Logging Configuration
# ============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ============================================================================
# Session Management
# ============================================================================

# Session time-to-live in seconds (default: 1 hour)
SESSION_TTL=3600

# Enable sliding window session expiration
# true: Sessions auto-extend on each access (recommended for long-running tasks)
# false: Sessions expire at creation_time + TTL regardless of activity
SESSION_AUTO_EXTEND=true

# ============================================================================
# Performance Settings
# ============================================================================

# Batch size for bulk operations
KATO_BATCH_SIZE=10000

# Connection pool size for concurrent requests
CONNECTION_POOL_SIZE=50

# Request timeout in seconds
REQUEST_TIMEOUT=120.0

# ============================================================================
# Port Mappings (modify if you need different ports)
# ============================================================================

# These are set in docker-compose.yml, not here
# To change ports, edit docker-compose.yml:
#   - KATO: 8000:8000
#   - MongoDB: 27017:27017
#   - Qdrant: 6333:6333
#   - Redis: 6379:6379

# ============================================================================
# Advanced Configuration
# ============================================================================

# Maximum pattern length (0 = manual learning only)
# Set to a positive number to enable auto-learning after N observations
# MAX_PATTERN_LENGTH=0

# Short-term memory mode after auto-learn
# CLEAR: STM is completely cleared after auto-learn
# ROLLING: STM maintained as sliding window for continuous learning
# STM_MODE=CLEAR

# Rolling window size for emotive values per pattern
# PERSISTENCE=5

# Pattern matching threshold (0.0-1.0)
# RECALL_THRESHOLD=0.1

# Indexer type for vector operations
# INDEXER_TYPE=VI

# Maximum predictions to return
# MAX_PREDICTIONS=100

# Sort symbols alphabetically within events
# SORT=true

# Enable prediction processing
# PROCESS_PREDICTIONS=true

# ============================================================================
# Notes
# ============================================================================

# 1. Create a .env file from this template:
#    cp .env.example .env
#
# 2. Uncomment and modify the values you want to change
#
# 3. Restart services to apply changes:
#    ./start.sh restart
#
# 4. For production deployments, consider:
#    - Using stronger credentials for databases
#    - Setting up network isolation
#    - Configuring proper backup strategies
#    - Monitoring and alerting
