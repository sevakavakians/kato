services:
  # MongoDB shared by all KATO instances
  mongodb:
    image: mongo:4.4
    container_name: kato-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - kato-network
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant vector database (required for vector operations)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: kato-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - kato-network
    restart: unless-stopped

  # Single KATO instance for testing
  kato:
    build:
      context: .
      dockerfile: Dockerfile
    image: kato:latest
    container_name: kato-test
    environment:
      - PROCESSOR_ID=test
      - PROCESSOR_NAME=Test
      - MONGO_BASE_URL=mongodb://mongodb:27017
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - MAX_PATTERN_LENGTH=0
      - PERSISTENCE=5
      - RECALL_THRESHOLD=0.1
      - LOG_LEVEL=DEBUG  # Debug for better test diagnostics
    ports:
      - "8001:8000"  # Use 8001 as tests look for this port first
    networks:
      - kato-network
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mongo-data:
  qdrant-data:

networks:
  kato-network:
    driver: bridge