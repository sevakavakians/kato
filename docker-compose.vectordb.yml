version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant-${USER:-kato}-1
    ports:
      - "${QDRANT_REST_PORT:-6333}:6333"
      - "${QDRANT_GRPC_PORT:-6334}:6334"
    volumes:
      - qdrant-storage:/qdrant/storage
    environment:
      - QDRANT__LOG_LEVEL=${QDRANT_LOG_LEVEL:-INFO}
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__STORAGE__STORAGE_PATH=/qdrant/storage
      - QDRANT__STORAGE__ON_DISK_PAYLOAD=true
      - QDRANT__STORAGE__OPTIMIZERS__MEMMAP_THRESHOLD=20000
      - QDRANT__STORAGE__OPTIMIZERS__INDEXING_THRESHOLD=10000
      - QDRANT__STORAGE__PERFORMANCE__MAX_SEARCH_THREADS=0  # Use all available cores
    networks:
      - kato-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Qdrant with GPU support (NVIDIA)
  # Uncomment to use GPU-accelerated version
  # qdrant-gpu:
  #   image: qdrant/qdrant:gpu-nvidia-latest
  #   container_name: qdrant-gpu-${USER:-kato}-1
  #   runtime: nvidia
  #   environment:
  #     - NVIDIA_VISIBLE_DEVICES=all
  #     - NVIDIA_DRIVER_CAPABILITIES=compute,utility
  #     - QDRANT__GPU__INDEXING=true
  #     - QDRANT__GPU__FORCE_HALF_PRECISION=false
  #     - QDRANT__GPU__GROUPS_COUNT=512
  #     - QDRANT__LOG_LEVEL=${QDRANT_LOG_LEVEL:-INFO}
  #     - QDRANT__SERVICE__HTTP_PORT=6333
  #     - QDRANT__SERVICE__GRPC_PORT=6334
  #   ports:
  #     - "${QDRANT_REST_PORT:-6333}:6333"
  #     - "${QDRANT_GRPC_PORT:-6334}:6334"
  #   volumes:
  #     - qdrant-storage:/qdrant/storage
  #     - ./config/qdrant_config.yaml:/qdrant/config/config.yaml:ro
  #   networks:
  #     - kato-network
  #   restart: unless-stopped

  # Optional: Redis for caching layer
  redis-cache:
    image: redis:7-alpine
    container_name: redis-cache-${USER:-kato}-1
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    command: >
      redis-server
      --maxmemory ${REDIS_MAX_MEMORY:-1gb}
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --appendonly yes
    networks:
      - kato-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  qdrant-storage:
    driver: local
  redis-data:
    driver: local

networks:
  kato-network:
    external: true