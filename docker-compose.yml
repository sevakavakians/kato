services:
  # MongoDB shared by all KATO instances
  mongodb:
    image: mongo:4.4
    container_name: kato-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - kato-network
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant vector database (optional, for vector operations)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: kato-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - kato-network
    restart: unless-stopped

  # Primary KATO instance for general use
  kato-primary:
    build:
      context: .
      dockerfile: Dockerfile
    image: kato:latest
    container_name: kato-primary
    environment:
      - PROCESSOR_ID=primary
      - PROCESSOR_NAME=Primary
      - MONGO_BASE_URL=mongodb://mongodb:27017
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - MAX_PATTERN_LENGTH=0
      - PERSISTENCE=5
      - RECALL_THRESHOLD=0.1
      - LOG_LEVEL=INFO
    ports:
      - "8001:8000"
    networks:
      - kato-network
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  # Testing KATO instance (isolated for tests)
  kato-testing:
    build:
      context: .
      dockerfile: Dockerfile
    image: kato:latest
    container_name: kato-testing
    environment:
      - PROCESSOR_ID=testing
      - PROCESSOR_NAME=Testing
      - MONGO_BASE_URL=mongodb://mongodb:27017
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - MAX_PATTERN_LENGTH=0
      - PERSISTENCE=5
      - RECALL_THRESHOLD=0.1
      - LOG_LEVEL=DEBUG
    ports:
      - "8002:8000"
    networks:
      - kato-network
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  # Analytics KATO instance (example of specialized configuration)
  kato-analytics:
    build:
      context: .
      dockerfile: Dockerfile
    image: kato:latest
    container_name: kato-analytics
    environment:
      - PROCESSOR_ID=analytics
      - PROCESSOR_NAME=Analytics
      - MONGO_BASE_URL=mongodb://mongodb:27017
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - MAX_PATTERN_LENGTH=50  # Auto-learn after 50 observations
      - PERSISTENCE=10  # Longer persistence for analytics
      - RECALL_THRESHOLD=0.3  # Higher threshold for analytics
      - LOG_LEVEL=INFO
    ports:
      - "8003:8000"
    networks:
      - kato-network
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  # Template for dynamically spawned instances
  # Use --scale or Docker API to create more instances
  kato-template:
    build:
      context: .
      dockerfile: Dockerfile
    image: kato:latest
    environment:
      - MONGO_BASE_URL=mongodb://mongodb:27017
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - LOG_LEVEL=INFO
    networks:
      - kato-network
    depends_on:
      mongodb:
        condition: service_healthy
    deploy:
      replicas: 0  # Don't start by default
    restart: unless-stopped

  # Optional: Nginx reverse proxy for load balancing
  # nginx:
  #   image: nginx:alpine
  #   container_name: kato-nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   networks:
  #     - kato-network
  #   depends_on:
  #     - kato-primary
  #     - kato-testing
  #     - kato-analytics
  #   restart: unless-stopped

networks:
  kato-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  mongo-data:
    driver: local
  qdrant-data:
    driver: local