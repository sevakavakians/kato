[project]
name = "kato"
version = "2.0.0"
description = "Knowledge Abstraction for Traceable Outcomes - Deterministic memory and prediction system"
authors = [{name = "KATO Team"}]
readme = "README.md"
requires-python = ">=3.9"

[tool.ruff]
# Same as Black (120 is more readable for modern displays)
line-length = 120
target-version = "py39"

# Enable pycodestyle (E), Pyflakes (F), and isort (I) by default
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
]

ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults (FastAPI uses this pattern)
    "B904",   # raise from (we handle this manually)
]

# Exclude common directories
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "*.pyc",
    ".pytest_cache",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py files

[tool.bandit]
exclude_dirs = [
    "tests",
    ".venv",
    "venv",
    "build",
    "dist"
]
skips = [
    "B101",  # assert_used - we use asserts in tests
    "B601",  # paramiko_calls - not applicable
]

[tool.vulture]
exclude = [
    ".venv/",
    "venv/",
    "tests/",
    "build/",
    "dist/",
]
min_confidence = 80
sort_by_size = true

[tool.pytest.ini_options]
# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output options
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--disable-warnings",
]

# Async support
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

# Markers
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "api: API tests",
    "slow: Slow tests",
    "performance: Performance tests",
]

[tool.coverage.run]
source = ["kato"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
